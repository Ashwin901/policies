version: '%!s(<nil>)'
name: refresh-env-var-in-pods
displayName: Refresh Environment Variables in Pods
createdAt: "2023-02-19T19:27:48Z"
description: When Pods consume Secrets or ConfigMaps through environment variables, should the contents of those source resources change, the downstream Pods are normally not aware of them. In order for the changes to be reflected, Pods must either restart or be respawned. This policy watches for changes to Secrets which have been marked for this refreshing process which contain the label `kyverno.io/watch=true` and will write an annotation to any Deployment Pod template which consume them as env vars. This will result in a new rollout of Pods which will pick up the changed values. See the related policy entitled "Refresh Volumes in Pods" for a similar reloading process when ConfigMaps and Secrets are consumed as volumes instead. Use of this policy may require providing the Kyverno ServiceAccount with permission to update Deployments.
homeURL: https://github.com/Ashwin901/policies/tree/master/other/refresh-env-var-in-pod
keywords:
    - kyverno
    - policy
links:
    - name: Source
      url: https://github.com/Ashwin901/policies/blob/master/other/refresh-env-var-in-pod/refresh-env-var-in-pod.yaml
readme: |-
    # Refresh Environment Variables in Pods
    When Pods consume Secrets or ConfigMaps through environment variables, should the contents of those source resources change, the downstream Pods are normally not aware of them. In order for the changes to be reflected, Pods must either restart or be respawned. This policy watches for changes to Secrets which have been marked for this refreshing process which contain the label `kyverno.io/watch=true` and will write an annotation to any Deployment Pod template which consume them as env vars. This will result in a new rollout of Pods which will pick up the changed values. See the related policy entitled "Refresh Volumes in Pods" for a similar reloading process when ConfigMaps and Secrets are consumed as volumes instead. Use of this policy may require providing the Kyverno ServiceAccount with permission to update Deployments.
install: |-
    ### Usage
    ```shell
    kubectl apply -f https://raw.githubusercontent.com/Ashwin901/policies/master/other/refresh-env-var-in-pod/refresh-env-var-in-pod.yaml
    ```
provider:
    name: Ashwin901
